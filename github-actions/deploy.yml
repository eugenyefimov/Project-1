name: Deploy Infrastructure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0
        
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
        
    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./terraform
      
    - name: Terraform Plan
      run: terraform plan -input=false
      working-directory: ./terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
        TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
        TF_VAR_github_org: ${{ secrets.GITHUB_ORG }}
        TF_VAR_github_repo: ${{ secrets.GITHUB_REPO }}
      
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      working-directory: ./terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
        TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
        TF_VAR_github_org: ${{ secrets.GITHUB_ORG }}
        TF_VAR_github_repo: ${{ secrets.GITHUB_REPO }}

